name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  newman-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Start local server
        run: npm run tern-on-api &
        env:
          NODE_ENV: test

      - name: Run Postman Collection with Newman
        run: newman run store.postman_collection.json
        if: always()

      - name: Create newman report
        run: newman run store.postman_collection.json -r json
        if: always()
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: newman-report
          path: ./newman
          retention-days: 1

      - name: List contents of downloaded newman-report
        if: always()
        run: ls -R ./newman

  deploy:
    needs: newman-tests
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Download newman-report
        uses: actions/download-artifact@v4
        with:
          name: newman-report
          path: ./newman

      - name: Copy files to gh-pages branch
        run: |
          mkdir -p ./gh-pages
          cp -R ./newman/* ./gh-pages/
          
      - name: Commit and push to gh-pages
        run: |
          cd ./gh-pages
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git init
          git add .
          git commit -m "Deploy newman report"
          git push --force "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:gh-pages

      - name: Print GitHub Pages URL
        run: |
          REPO_NAME=$(basename $GITHUB_REPOSITORY)
          REPO_OWNER=$(dirname $GITHUB_REPOSITORY)
          echo "GitHub Pages URL: https://${REPO_OWNER}.github.io/${REPO_NAME}/"